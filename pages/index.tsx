import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import useSWR from 'swr';
import { gql } from '@apollo/client';

import styles from '../styles/Home.module.css';
import { GET_COMMENTS } from '../gql/queries';
import { gqlFetcher } from '../utils/functions';
import { client } from '../gql/client';

export const getStaticProps = async () => {
  const { error, data } = await client.query({
    query: gql`${GET_COMMENTS}`,
  });

  if (error) {
    return {
      props: {
        comments: null,
      },
    };
  }

  return {
    props: {
      comments: data.comments,
    },
    revalidate: 30,
  };
};

const query = {
  query: GET_COMMENTS,
} as any;

const getData = async (...args: any) => {
  return await gqlFetcher(query);
};

interface IHome {
  comments: any
}

const Home = ({ comments }: IHome) => {
  const [commentsState, setCommentsState] = useState<any[] | null>(comments);
  const { data, error } = useSWR(query, getData);

  useEffect(() => {
    if (data) {
      setCommentsState(data.comments);
    }
  }, [data]);
  // useEffect(() => console.log('commentsState', commentsState), [commentsState]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {
          commentsState && commentsState.map((comment: any) => (
            <div key={comment.id}>{ comment.content }</div>
          ))
        }
      </main>
    </div>
  );
};

export default Home;
